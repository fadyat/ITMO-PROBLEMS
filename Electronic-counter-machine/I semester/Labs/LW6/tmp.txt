/*
	ВУ-1: -2x + 5
	ВУ-2: 3x / 4
*/

CMD CK 020

000 0000 // ячейка с адресом возврата
001 C030 // переход к основной части программы

:: Наращивание x
020 FA00 // разрешение прерывания
021 F200 // A = 0
022 F800 // A++
023 3025 // x = A
024 C022 // последующее наращивание
025 0000 // x

// Запоминание значения А и регистра переноса
030 317A // (17A) = A
031 F600 // A << 1
032 317B // (17B) = A

// Проверка ВУ-1
033 E101 // проверка флага ВУ-1
034 C060 // флаг ВУ-1 - сброшен: переход к 060
035 С040 // флаг ВУ-1 - готов: переход к 040

:: ВУ-1
040 F200 // A = 0
041 6025 /* A = 2*x
042 6025	*/
043 F400 // A = -A <=> A = -2x
044 F800 /*
045 F800
046 F800    A += 5 <=> A = -2x + 5
047 F800
048 F800	*/
049 E103 // проверка флага ВУ-3
04A C049 // флаг ВУ-3 сброшен: ожидание готовности
04B E303 // флаг ВУ-3 готов: вывод
04C E003 // сброс флага ВУ-3
04D E001 // сброс флага ВУ-1
04E С060 // переход к 060

// Проверка ВУ-2
060 E102 // проверка флага ВУ-2
061 С080 // флаг ВУ-2 - сброшен: переход к 080
062 С063 // флаг ВУ-2 - готов: переход в 063

:: ВУ-2
063 F200 // A = 0
064 6025 /*
065 6025   A = 3x
066 6025	*/
067 F700 /* A >> 2 <=> A /= 4 <=> A = 3x / 4 
068 F700 	*/
069 E103 // проверка флага ВУ-3
06A C069 // флаг ВУ-3 - сброшен: ожидание готовности
06B E303 // флаг ВУ-3 - готов: вывод
06C E003 // сброс флага ВУ-3
06D E002 // сброс флага ВУ-2
06E C080

// Восстановление A
080 F200 // A = 0
081 417B // A += (17B)
082 F700 // A >> 1
083 F200 // A = 0, но регистр переноса сохранен
084 417A // A += (17A)
085 FA00 // разрешение прерывания
086 C800 // переход по адресу (000)






/* buffer */
17A 0000 // A
17B 0000 // регистр переноса