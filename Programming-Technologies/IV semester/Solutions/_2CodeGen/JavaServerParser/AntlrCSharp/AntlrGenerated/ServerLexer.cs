//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/artyomfadeyev/GitHub/ITMO-PROBLEMS/Programming-Technologies/IV semester/Solutions/_2CodeGen/JavaServerParser/AntlrCSharp/Server.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class ServerLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WS=1, PACKAGE=2, IMPORT=3, SOURCE=4, ANNOTATION_HEADER=5, ANNOTATION_ARGS=6, 
		KEY=7, VALUE=8, KEY_VALUE=9, IMPORT_FULL=10, PACKAGE_FULL=11, ANNOTATION_FULL=12;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LETTER", "WORD", "DIGITS", "NUMBER", "WS", "PACKAGE", "IMPORT", "SOURCE", 
		"ANNOTATION_HEADER", "ANNOTATION_ARGS", "KEY", "VALUE", "KEY_VALUE", "IMPORT_FULL", 
		"PACKAGE_FULL", "ANNOTATION_FULL"
	};


	public ServerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ServerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'package'", "'import'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "PACKAGE", "IMPORT", "SOURCE", "ANNOTATION_HEADER", "ANNOTATION_ARGS", 
		"KEY", "VALUE", "KEY_VALUE", "IMPORT_FULL", "PACKAGE_FULL", "ANNOTATION_FULL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Server.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ServerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\xE', '\x8A', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x6', '\x3', '(', '\n', '\x3', '\r', '\x3', '\xE', '\x3', ')', 
		'\x3', '\x3', '\x5', '\x3', '-', '\n', '\x3', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x5', '\x6', '\x5', '\x32', '\n', '\x5', '\r', '\x5', '\xE', '\x5', 
		'\x33', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x6', 
		'\x5', ':', '\n', '\x5', '\r', '\x5', '\xE', '\x5', ';', '\x5', '\x5', 
		'>', '\n', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', 
		'\t', '\x5', '\t', 'U', '\n', '\t', '\x6', '\t', 'W', '\n', '\t', '\r', 
		'\t', '\xE', '\t', 'X', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x5', '\v', '\x61', '\n', '\v', '\x3', 
		'\v', '\x5', '\v', '\x64', '\n', '\v', '\a', '\v', '\x66', '\n', '\v', 
		'\f', '\v', '\xE', '\v', 'i', '\v', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x3', '\f', '\x6', '\f', 'o', '\n', '\f', '\r', '\f', '\xE', '\f', 
		'p', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x6', '\r', 'v', '\n', '\r', 
		'\r', '\r', '\xE', '\r', 'w', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x5', '\xE', '\x7F', '\n', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x5', '\x11', '\x89', '\n', '\x11', 
		'\x2', '\x2', '\x12', '\x3', '\x2', '\x5', '\x2', '\a', '\x2', '\t', '\x2', 
		'\v', '\x3', '\r', '\x4', '\xF', '\x5', '\x11', '\x6', '\x13', '\a', '\x15', 
		'\b', '\x17', '\t', '\x19', '\n', '\x1B', '\v', '\x1D', '\f', '\x1F', 
		'\r', '!', '\xE', '\x3', '\x2', '\x6', '\x4', '\x2', '\x43', '\\', '\x63', 
		'|', '\x3', '\x2', '\x32', ';', '\x5', '\x2', '\v', '\f', '\"', '\"', 
		'=', '=', '\x5', '\x2', '$', '$', '\x31', '\x31', '\x61', '\x61', '\x2', 
		'\x97', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '#', '\x3', '\x2', '\x2', '\x2', '\x5', ',', '\x3', '\x2', 
		'\x2', '\x2', '\a', '.', '\x3', '\x2', '\x2', '\x2', '\t', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\v', '?', '\x3', '\x2', '\x2', '\x2', '\r', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\xF', 'K', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'V', '\x3', '\x2', '\x2', '\x2', '\x13', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'\x15', ']', '\x3', '\x2', '\x2', '\x2', '\x17', 'n', '\x3', '\x2', '\x2', 
		'\x2', '\x19', 'u', '\x3', '\x2', '\x2', '\x2', '\x1B', '~', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x80', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x83', 
		'\x3', '\x2', '\x2', '\x2', '!', '\x86', '\x3', '\x2', '\x2', '\x2', '#', 
		'$', '\t', '\x2', '\x2', '\x2', '$', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'%', '(', '\x5', '\x3', '\x2', '\x2', '&', '(', '\a', '\x61', '\x2', '\x2', 
		'\'', '%', '\x3', '\x2', '\x2', '\x2', '\'', '&', '\x3', '\x2', '\x2', 
		'\x2', '(', ')', '\x3', '\x2', '\x2', '\x2', ')', '\'', '\x3', '\x2', 
		'\x2', '\x2', ')', '*', '\x3', '\x2', '\x2', '\x2', '*', '-', '\x3', '\x2', 
		'\x2', '\x2', '+', '-', '\a', ',', '\x2', '\x2', ',', '\'', '\x3', '\x2', 
		'\x2', '\x2', ',', '+', '\x3', '\x2', '\x2', '\x2', '-', '\x6', '\x3', 
		'\x2', '\x2', '\x2', '.', '/', '\t', '\x3', '\x2', '\x2', '/', '\b', '\x3', 
		'\x2', '\x2', '\x2', '\x30', '\x32', '\x5', '\a', '\x4', '\x2', '\x31', 
		'\x30', '\x3', '\x2', '\x2', '\x2', '\x32', '\x33', '\x3', '\x2', '\x2', 
		'\x2', '\x33', '\x31', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x34', '=', '\x3', '\x2', '\x2', '\x2', '\x35', 
		'\x36', '\a', '\x30', '\x2', '\x2', '\x36', '\x37', '\a', '.', '\x2', 
		'\x2', '\x37', '\x39', '\x3', '\x2', '\x2', '\x2', '\x38', ':', '\x5', 
		'\a', '\x4', '\x2', '\x39', '\x38', '\x3', '\x2', '\x2', '\x2', ':', ';', 
		'\x3', '\x2', '\x2', '\x2', ';', '\x39', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\x3', '\x2', '\x2', '\x2', '<', '>', '\x3', '\x2', '\x2', '\x2', 
		'=', '\x35', '\x3', '\x2', '\x2', '\x2', '=', '>', '\x3', '\x2', '\x2', 
		'\x2', '>', '\n', '\x3', '\x2', '\x2', '\x2', '?', '@', '\t', '\x4', '\x2', 
		'\x2', '@', '\x41', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\b', 
		'\x6', '\x2', '\x2', '\x42', '\f', '\x3', '\x2', '\x2', '\x2', '\x43', 
		'\x44', '\a', 'r', '\x2', '\x2', '\x44', '\x45', '\a', '\x63', '\x2', 
		'\x2', '\x45', '\x46', '\a', '\x65', '\x2', '\x2', '\x46', 'G', '\a', 
		'm', '\x2', '\x2', 'G', 'H', '\a', '\x63', '\x2', '\x2', 'H', 'I', '\a', 
		'i', '\x2', '\x2', 'I', 'J', '\a', 'g', '\x2', '\x2', 'J', '\xE', '\x3', 
		'\x2', '\x2', '\x2', 'K', 'L', '\a', 'k', '\x2', '\x2', 'L', 'M', '\a', 
		'o', '\x2', '\x2', 'M', 'N', '\a', 'r', '\x2', '\x2', 'N', 'O', '\a', 
		'q', '\x2', '\x2', 'O', 'P', '\a', 't', '\x2', '\x2', 'P', 'Q', '\a', 
		'v', '\x2', '\x2', 'Q', '\x10', '\x3', '\x2', '\x2', '\x2', 'R', 'T', 
		'\x5', '\x5', '\x3', '\x2', 'S', 'U', '\a', '\x30', '\x2', '\x2', 'T', 
		'S', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\x3', '\x2', '\x2', '\x2', 
		'U', 'W', '\x3', '\x2', '\x2', '\x2', 'V', 'R', '\x3', '\x2', '\x2', '\x2', 
		'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'Z', '[', '\a', '\x42', '\x2', '\x2', '[', '\\', '\x5', '\x5', 
		'\x3', '\x2', '\\', '\x14', '\x3', '\x2', '\x2', '\x2', ']', 'g', '\a', 
		'*', '\x2', '\x2', '^', '`', '\x5', '\x1B', '\xE', '\x2', '_', '\x61', 
		'\a', '.', '\x2', '\x2', '`', '_', '\x3', '\x2', '\x2', '\x2', '`', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '\x61', '\x63', '\x3', '\x2', '\x2', '\x2', 
		'\x62', '\x64', '\a', '\"', '\x2', '\x2', '\x63', '\x62', '\x3', '\x2', 
		'\x2', '\x2', '\x63', '\x64', '\x3', '\x2', '\x2', '\x2', '\x64', '\x66', 
		'\x3', '\x2', '\x2', '\x2', '\x65', '^', '\x3', '\x2', '\x2', '\x2', '\x66', 
		'i', '\x3', '\x2', '\x2', '\x2', 'g', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'g', 'h', '\x3', '\x2', '\x2', '\x2', 'h', 'j', '\x3', '\x2', '\x2', '\x2', 
		'i', 'g', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\a', '+', '\x2', '\x2', 
		'k', '\x16', '\x3', '\x2', '\x2', '\x2', 'l', 'o', '\x5', '\x3', '\x2', 
		'\x2', 'm', 'o', '\a', '\x61', '\x2', '\x2', 'n', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\x3', '\x2', '\x2', 
		'\x2', 'p', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', 
		'\x2', 'q', '\x18', '\x3', '\x2', '\x2', '\x2', 'r', 'v', '\x5', '\x3', 
		'\x2', '\x2', 's', 'v', '\t', '\x5', '\x2', '\x2', 't', 'v', '\x5', '\a', 
		'\x4', '\x2', 'u', 'r', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', '\x2', 
		'\x2', '\x2', 'u', 't', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', 
		'\x2', '\x2', 'w', 'u', '\x3', '\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', 
		'\x2', '\x2', 'x', '\x1A', '\x3', '\x2', '\x2', '\x2', 'y', '\x7F', '\x5', 
		'\x19', '\r', '\x2', 'z', '{', '\x5', '\x17', '\f', '\x2', '{', '|', '\a', 
		'?', '\x2', '\x2', '|', '}', '\x5', '\x19', '\r', '\x2', '}', '\x7F', 
		'\x3', '\x2', '\x2', '\x2', '~', 'y', '\x3', '\x2', '\x2', '\x2', '~', 
		'z', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x81', '\x5', '\xF', '\b', '\x2', '\x81', '\x82', '\x5', 
		'\x11', '\t', '\x2', '\x82', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x83', 
		'\x84', '\x5', '\r', '\a', '\x2', '\x84', '\x85', '\x5', '\x11', '\t', 
		'\x2', '\x85', ' ', '\x3', '\x2', '\x2', '\x2', '\x86', '\x88', '\x5', 
		'\x13', '\n', '\x2', '\x87', '\x89', '\x5', '\x15', '\v', '\x2', '\x88', 
		'\x87', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\"', '\x3', '\x2', '\x2', '\x2', '\x14', '\x2', '\'', 
		')', ',', '\x33', ';', '=', 'T', 'X', '`', '\x63', 'g', 'n', 'p', 'u', 
		'w', '~', '\x88', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
