//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/artyomfadeyev/GitHub/ITMO-PROBLEMS/Programming-Technologies/IV semester/Solutions/_2CodeGen/Parser/AntlrParser/Server.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ServerParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IServerListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.package_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_name([NotNull] ServerParser.Package_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.package_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_name([NotNull] ServerParser.Package_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.import_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_name([NotNull] ServerParser.Import_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.import_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_name([NotNull] ServerParser.Import_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.path"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPath([NotNull] ServerParser.PathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.path"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPath([NotNull] ServerParser.PathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.package"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage([NotNull] ServerParser.PackageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.package"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage([NotNull] ServerParser.PackageContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.import_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_([NotNull] ServerParser.Import_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.import_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_([NotNull] ServerParser.Import_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.annotation_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation_header([NotNull] ServerParser.Annotation_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.annotation_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation_header([NotNull] ServerParser.Annotation_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.annotation_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation_arguments([NotNull] ServerParser.Annotation_argumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.annotation_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation_arguments([NotNull] ServerParser.Annotation_argumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] ServerParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] ServerParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifier([NotNull] ServerParser.ModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifier([NotNull] ServerParser.ModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.var_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_type([NotNull] ServerParser.Var_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.var_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_type([NotNull] ServerParser.Var_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar([NotNull] ServerParser.VarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar([NotNull] ServerParser.VarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.return_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_type([NotNull] ServerParser.Return_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.return_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_type([NotNull] ServerParser.Return_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.model_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel_type([NotNull] ServerParser.Model_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.model_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel_type([NotNull] ServerParser.Model_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.model_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel_name([NotNull] ServerParser.Model_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.model_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel_name([NotNull] ServerParser.Model_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.parents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParents([NotNull] ServerParser.ParentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.parents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParents([NotNull] ServerParser.ParentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.model_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel_header([NotNull] ServerParser.Model_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.model_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel_header([NotNull] ServerParser.Model_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.model_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel_attribute([NotNull] ServerParser.Model_attributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.model_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel_attribute([NotNull] ServerParser.Model_attributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.model_annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel_annotation([NotNull] ServerParser.Model_annotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.model_annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel_annotation([NotNull] ServerParser.Model_annotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel([NotNull] ServerParser.ModelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel([NotNull] ServerParser.ModelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_name([NotNull] ServerParser.Function_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_name([NotNull] ServerParser.Function_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_arg([NotNull] ServerParser.Function_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_arg([NotNull] ServerParser.Function_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_args([NotNull] ServerParser.Function_argsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_args([NotNull] ServerParser.Function_argsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_header([NotNull] ServerParser.Function_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_header([NotNull] ServerParser.Function_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function_annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_annotation([NotNull] ServerParser.Function_annotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function_annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_annotation([NotNull] ServerParser.Function_annotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] ServerParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] ServerParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_body([NotNull] ServerParser.Function_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_body([NotNull] ServerParser.Function_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ServerParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] ServerParser.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ServerParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] ServerParser.RootContext context);
}
